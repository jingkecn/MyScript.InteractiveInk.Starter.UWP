<Page
    x:Class="MyScript.InteractiveInk.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:MyScript.InteractiveInk.Views.Controls"
    xmlns:winui="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:viewModels="using:MyScript.InteractiveInk.ViewModels"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
    <Page.DataContext>
        <viewModels:MainViewModel x:Name="ViewModel" />
    </Page.DataContext>
    <winui:HeaderedContentControl HorizontalContentAlignment="Stretch"
                                  VerticalContentAlignment="Stretch">
        <winui:HeaderedContentControl.Header>
            <Grid>
                <controls:MainCommandBar x:Name="TopCommandBar"
                                         Background="Transparent"
                                         DataContext="{x:Bind ViewModel}"
                                         DefaultLabelPosition="Right"
                                         HorizontalAlignment="Stretch"
                                         Margin="{StaticResource SmallLeftMargin}"
                                         VerticalAlignment="Stretch"
                                         Visibility="Collapsed" />
                <InkToolbar HorizontalAlignment="Center"
                            TargetInkCanvas="{x:Bind InkCanvas}"
                            VerticalAlignment="Stretch">
                    <InkToolbarCustomToggleButton x:Uid="LassoSelectionButton"
                                                  IsChecked="{x:Bind ViewModel.EnableLassoSelection, Mode=TwoWay}">
                        <FontIcon Glyph="{StaticResource FontIconMarquee}" />
                    </InkToolbarCustomToggleButton>
                    <InkToolbarCustomToggleButton x:Uid="MouseInkingButton"
                                                  IsChecked="{x:Bind ViewModel.EnableMouse, Mode=TwoWay}">
                        <FontIcon Glyph="{StaticResource FontIconMouse}" />
                    </InkToolbarCustomToggleButton>
                    <InkToolbarCustomToggleButton x:Uid="PenInkingButton"
                                                  IsChecked="{x:Bind ViewModel.EnablePen, Mode=TwoWay}">
                        <FontIcon Glyph="{StaticResource FontIconPenWorkspace}" />
                    </InkToolbarCustomToggleButton>
                    <InkToolbarCustomToggleButton x:Uid="TouchInkingButton"
                                                  IsChecked="{x:Bind ViewModel.EnableTouch, Mode=TwoWay}">
                        <FontIcon Glyph="{StaticResource FontIconFingerInking}" />
                    </InkToolbarCustomToggleButton>
                </InkToolbar>
            </Grid>
        </winui:HeaderedContentControl.Header>
        <Grid Background="White">
            <InkCanvas x:Name="InkCanvas"
                       HorizontalAlignment="Stretch"
                       VerticalAlignment="Stretch" />
            <Canvas x:Name="DrawingCanvas"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch" />
        </Grid>
        <!--#region Visual States-->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource LargeWindowSnapPoint}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--#region Guidelines (Screen sizes and breakpoints)-->
                        <!-- See: https://docs.microsoft.com/en-us/windows/uwp/design/layout/screen-sizes-and-breakpoints-for-responsive-design#general-recommendations-->
                        <!--
                        ~ (Small) Dock app bars to the bottom of the window for improved reach-ability.
                        ~ (Medium & Large) Put command elements like app bars at the top of the app window.
                        -->
                        <Setter Target="TopCommandBar.Visibility" Value="Visible" />
                        <Setter Target="BottomCommandBar.Visibility" Value="Collapsed" />
                        <!--TODO: (Small) Use an icon to represent search (don't show a search box).-->
                        <!--#endregion-->
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <!--#endregion-->
    </winui:HeaderedContentControl>
    <Page.BottomAppBar>
        <controls:MainCommandBar x:Name="BottomCommandBar"
                                 Background="Transparent"
                                 DataContext="{x:Bind ViewModel}"
                                 DefaultLabelPosition="Right"
                                 HorizontalAlignment="Stretch"
                                 Margin="{StaticResource SmallLeftMargin}"
                                 VerticalAlignment="Stretch"
                                 Visibility="Visible" />
    </Page.BottomAppBar>
</Page>
